[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "moduli-sampler"
version = "0.1.0"
description = "Algebraic Moduli Sampler: Sheaf Cohomology on Curves"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "faiazparis", email = "faiazparis@gmail.com"}
]
keywords = [
    "algebraic geometry", "moduli", "sheaf cohomology", "Riemann-Roch",
    "Serre duality", "algebraic curves", "elliptic curves", "hyperelliptic curves",
    "plane curves", "reproducible research", "local-first"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "sympy>=1.12.0",
    "jsonschema>=4.17.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-hypothesis>=6.82.0",
    "hypothesis>=6.82.0",
    "mypy>=1.5.0",
    "ruff>=0.0.290",
    "black>=23.7.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocs-material-extensions>=1.3.0",
]

[project.scripts]
moduli-sampler = "moduli_sampler.cli:main"

[project.urls]
Homepage = "https://github.com/faiazparis/algebraic-moduli-sampler"
Documentation = "https://faiazparis.github.io/algebraic-moduli-sampler/"
Repository = "https://github.com/faiazparis/algebraic-moduli-sampler"
Issues = "https://github.com/faiazparis/algebraic-moduli-sampler/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/moduli_sampler"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/docs",
    "/.github",
    "/.pre-commit-config.yaml",
    "/mkdocs.yml",
    "/Makefile",
    "/README.md",
    "/LICENSE",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]

[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["moduli_sampler"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sympy.*",
    "numpy.*",
    "click.*",
    "rich.*",
    "pydantic.*",
    "jsonschema.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.pytest-cov]
source = ["src"]
omit = ["tests/*", "*/test_*"]
fail_under = 95
report_terminal = true
report_html = true
report_xml = true

[tool.hypothesis]
max_examples = 100
deadline = 5000
verbosity = normal
